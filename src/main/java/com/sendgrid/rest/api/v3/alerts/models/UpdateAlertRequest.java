/*
 * This code was generated by
 *
 * SENDGRID-OAI-GENERATOR
 *
 * Twilio SendGrid Alerts API
 * The Twilio SendGrid Alerts API allows you to specify an email address to receive notifications regarding your email usage or statistics. You can set up alerts to be sent to a specific email address on a recurring basis, whether for informational purposes or when specific account actions occur.  For most alerts, you can choose to have the alert sent to you as needed, hourly, daily, weekly, or monthly. The information contained in your alert will be for the last period of the alert. For example, if you choose weekly for the statistics alert, you will receive the statistics for the last week.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sendgrid.rest.api.v3.alerts.models;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.StringJoiner;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@ToString
public class UpdateAlertRequest {

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("email_to")
    @Getter
    @Setter
    private String emailTo;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("frequency")
    @Getter
    @Setter
    private String frequency;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("percentage")
    @Getter
    @Setter
    private Integer percentage;

    public UpdateAlertRequest() {}

    private UpdateAlertRequest(Builder builder) {
        this.emailTo = builder.emailTo;
        this.frequency = builder.frequency;
        this.percentage = builder.percentage;
    }

    // Builder class for constructing object
    public static class Builder {

        private String emailTo;
        private String frequency;
        private Integer percentage;

        public Builder() {}

        public Builder emailTo(String emailTo) {
            this.emailTo = emailTo;
            return this;
        }

        public Builder frequency(String frequency) {
            this.frequency = frequency;
            return this;
        }

        public Builder percentage(Integer percentage) {
            this.percentage = percentage;
            return this;
        }

        public UpdateAlertRequest build() {
            return new UpdateAlertRequest(this);
        }
    }

    @Override
    public String toString() {
        StringJoiner joiner = new StringJoiner(
            ", ",
            UpdateAlertRequest.class.getSimpleName() + "(",
            ")"
        );
        if (emailTo != null) joiner.add("emailTo=" + emailTo);
        if (frequency != null) joiner.add("frequency=" + frequency);
        if (percentage != null) joiner.add("percentage=" + percentage);
        return joiner.toString();
    }
}
