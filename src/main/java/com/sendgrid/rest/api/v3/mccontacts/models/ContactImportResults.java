/*
 * This code was generated by
 *
 * SENDGRID-OAI-GENERATOR
 *
 * Twilio SendGrid Marketing Campaigns Contacts API
 * The Twilio SendGrid Marketing Campaigns Contacts API allows you to manage all of your marketing contacts programmatically. You can also import and export contacts using this API. The Contacts API allows you to associate contacts with lists and segments; however, to manage the lists and segments themselves, see the [Lists API](https://docs.sendgrid.com/api-reference/lists/) and [Segments API](https://docs.sendgrid.com/api-reference/segmenting-contacts-v2/).  You can also manage your marketing contacts with the [Marketing Campaigns application user interface](https://mc.sendgrid.com/contacts). See [**How to Send Email with New Marketing Campaigns**](https://docs.sendgrid.com/ui/sending-email/how-to-send-email-with-marketing-campaigns) for more information.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sendgrid.rest.api.v3.mccontacts.models;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.math.BigDecimal;
import java.util.StringJoiner;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@ToString
public class ContactImportResults {

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("requested_count")
    @Getter
    @Setter
    private BigDecimal requestedCount;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("created_count")
    @Getter
    @Setter
    private BigDecimal createdCount;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("updated_count")
    @Getter
    @Setter
    private BigDecimal updatedCount;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("deleted_count")
    @Getter
    @Setter
    private BigDecimal deletedCount;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("errored_count")
    @Getter
    @Setter
    private BigDecimal erroredCount;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("errors_url")
    @Getter
    @Setter
    private String errorsUrl;

    public ContactImportResults() {}

    private ContactImportResults(Builder builder) {
        this.requestedCount = builder.requestedCount;
        this.createdCount = builder.createdCount;
        this.updatedCount = builder.updatedCount;
        this.deletedCount = builder.deletedCount;
        this.erroredCount = builder.erroredCount;
        this.errorsUrl = builder.errorsUrl;
    }

    // Builder class for constructing object
    public static class Builder {

        private BigDecimal requestedCount;
        private BigDecimal createdCount;
        private BigDecimal updatedCount;
        private BigDecimal deletedCount;
        private BigDecimal erroredCount;
        private String errorsUrl;

        public Builder() {}

        public Builder requestedCount(BigDecimal requestedCount) {
            this.requestedCount = requestedCount;
            return this;
        }

        public Builder createdCount(BigDecimal createdCount) {
            this.createdCount = createdCount;
            return this;
        }

        public Builder updatedCount(BigDecimal updatedCount) {
            this.updatedCount = updatedCount;
            return this;
        }

        public Builder deletedCount(BigDecimal deletedCount) {
            this.deletedCount = deletedCount;
            return this;
        }

        public Builder erroredCount(BigDecimal erroredCount) {
            this.erroredCount = erroredCount;
            return this;
        }

        public Builder errorsUrl(String errorsUrl) {
            this.errorsUrl = errorsUrl;
            return this;
        }

        public ContactImportResults build() {
            return new ContactImportResults(this);
        }
    }

    @Override
    public String toString() {
        StringJoiner joiner = new StringJoiner(
            ", ",
            ContactImportResults.class.getSimpleName() + "(",
            ")"
        );
        if (requestedCount != null) joiner.add(
            "requestedCount=" + requestedCount
        );
        if (createdCount != null) joiner.add("createdCount=" + createdCount);
        if (updatedCount != null) joiner.add("updatedCount=" + updatedCount);
        if (deletedCount != null) joiner.add("deletedCount=" + deletedCount);
        if (erroredCount != null) joiner.add("erroredCount=" + erroredCount);
        if (errorsUrl != null) joiner.add("errorsUrl=" + errorsUrl);
        return joiner.toString();
    }
}
