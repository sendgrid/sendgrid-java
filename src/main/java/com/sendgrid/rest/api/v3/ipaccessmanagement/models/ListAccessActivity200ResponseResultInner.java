/*
 * This code was generated by
 *
 * SENDGRID-OAI-GENERATOR
 *
 * Twilio SendGrid IP Access Management API
 * IP Twilio SendGrid IP Access Management API allows you to control which IP addresses can be used to access your account, either through the SendGrid application user interface or the API.  There is no limit to the number of IP addresses that you can allow.  It is possible to remove your own IP address from your list of allowed addresses, thus blocking your own access to your account. While we are able to restore your access, we do require thorough proof of your identify and ownership of your account. We take the security of your account very seriously and wish to prevent any 'bad actors' from maliciously gaining access to your account. Your current IP is clearly displayed to help prevent you from accidentally removing it from the allowed addresses.  See [**IP Access Management**](https://docs.sendgrid.com/ui/account-and-settings/ip-access-management) for more information.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sendgrid.rest.api.v3.ipaccessmanagement.models;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.StringJoiner;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@ToString
public class ListAccessActivity200ResponseResultInner {

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("allowed")
    @Getter
    @Setter
    private Boolean allowed;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("auth_method")
    @Getter
    @Setter
    private String authMethod;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("first_at")
    @Getter
    @Setter
    private Integer firstAt;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("ip")
    @Getter
    @Setter
    private String ip;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("last_at")
    @Getter
    @Setter
    private Integer lastAt;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("location")
    @Getter
    @Setter
    private String location;

    public ListAccessActivity200ResponseResultInner() {}

    private ListAccessActivity200ResponseResultInner(Builder builder) {
        this.allowed = builder.allowed;
        this.authMethod = builder.authMethod;
        this.firstAt = builder.firstAt;
        this.ip = builder.ip;
        this.lastAt = builder.lastAt;
        this.location = builder.location;
    }

    // Builder class for constructing object
    public static class Builder {

        private Boolean allowed;
        private String authMethod;
        private Integer firstAt;
        private String ip;
        private Integer lastAt;
        private String location;

        public Builder(
            Boolean allowed,
            String authMethod,
            Integer firstAt,
            String ip,
            Integer lastAt,
            String location
        ) {
            this.allowed = allowed;
            this.authMethod = authMethod;
            this.firstAt = firstAt;
            this.ip = ip;
            this.lastAt = lastAt;
            this.location = location;
        }

        public ListAccessActivity200ResponseResultInner build() {
            return new ListAccessActivity200ResponseResultInner(this);
        }
    }

    @Override
    public String toString() {
        StringJoiner joiner = new StringJoiner(
            ", ",
            ListAccessActivity200ResponseResultInner.class.getSimpleName() +
            "(",
            ")"
        );
        if (allowed != null) joiner.add("allowed=" + allowed);
        if (authMethod != null) joiner.add("authMethod=" + authMethod);
        if (firstAt != null) joiner.add("firstAt=" + firstAt);
        if (ip != null) joiner.add("ip=" + ip);
        if (lastAt != null) joiner.add("lastAt=" + lastAt);
        if (location != null) joiner.add("location=" + location);
        return joiner.toString();
    }
}
