/*
 * This code was generated by
 *
 * SENDGRID-OAI-GENERATOR
 *
 * Twilio SendGrid Marketing Campaigns Designs
 * The Twilio SendGrid Designs API offers the ability to manage assets stored in the Twilio SendGrid [Design Library](https://mc.sendgrid.com/design-library/my-designs).  The Design Library is a feature-rich email layout tool and media repository. You can [build designs for all your marketing email needs](https://sendgrid.com/docs/ui/sending-email/working-with-marketing-campaigns-email-designs/), including Single Sends and Automations.  You can also duplicate and then modify one of the pre-built designs provided by Twilio SendGrid to get you started.  The Designs API provides a REST-like interface for creating new designs, retrieving a list of existing designs, duplicating or updating a design, and deleting a design.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sendgrid.rest.api.v3.mcdesigns.models;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.URI;
import java.util.StringJoiner;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@ToString
public class Metadata {

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("prev")
    @Getter
    @Setter
    private URI prev;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("self")
    @Getter
    @Setter
    private URI self;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("next")
    @Getter
    @Setter
    private URI next;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("count")
    @Getter
    @Setter
    private Integer count;

    public Metadata() {}

    private Metadata(Builder builder) {
        this.prev = builder.prev;
        this.self = builder.self;
        this.next = builder.next;
        this.count = builder.count;
    }

    // Builder class for constructing object
    public static class Builder {

        private URI prev;
        private URI self;
        private URI next;
        private Integer count;

        public Builder() {}

        public Builder prev(URI prev) {
            this.prev = prev;
            return this;
        }

        public Builder self(URI self) {
            this.self = self;
            return this;
        }

        public Builder next(URI next) {
            this.next = next;
            return this;
        }

        public Builder count(Integer count) {
            this.count = count;
            return this;
        }

        public Metadata build() {
            return new Metadata(this);
        }
    }

    @Override
    public String toString() {
        StringJoiner joiner = new StringJoiner(
            ", ",
            Metadata.class.getSimpleName() + "(",
            ")"
        );
        if (prev != null) joiner.add("prev=" + prev);
        if (self != null) joiner.add("self=" + self);
        if (next != null) joiner.add("next=" + next);
        if (count != null) joiner.add("count=" + count);
        return joiner.toString();
    }
}
