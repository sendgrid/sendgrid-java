/*
 * This code was generated by
 *
 * SENDGRID-OAI-GENERATOR
 *
 * Twilio SendGrid Legacy Marketing Campaigns Contacts API
 * The Twilio SendGrid Legacy Marketing Campaigns Contacts API allows you to manage your marketing contacts programmatically. This API is operational, but we recommend using the current version of Marketing Campaigns' [Contacts API](https://docs.sendgrid.com/api-reference/contacts/), [Lists API](https://docs.sendgrid.com/api-reference/lists/), and [Segments API](https://docs.sendgrid.com/api-reference/segmenting-contacts-v2/) to manage your contacts.  See [**Migrating from Legacy Marketing Campaigns**](https://docs.sendgrid.com/ui/sending-email/migrating-from-legacy-marketing-campaigns) for more information.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sendgrid.rest.api.v3.lmccontactdb.models;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.sendgrid.rest.api.v3.lmccontactdb.models.ContactdbCustomFieldIdValue;
import java.math.BigDecimal;
import java.util.List;
import java.util.StringJoiner;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@ToString
public class ContactdbRecipient200RecipientsInner {

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("id")
    @Getter
    @Setter
    private String id;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("created_at")
    @Getter
    @Setter
    private BigDecimal createdAt;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("custom_fields")
    @Getter
    @Setter
    private List<ContactdbCustomFieldIdValue> customFields;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("email")
    @Getter
    @Setter
    private String email;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("first_name")
    @Getter
    @Setter
    private String firstName;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("last_name")
    @Getter
    @Setter
    private String lastName;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("last_clicked")
    @Getter
    @Setter
    private BigDecimal lastClicked;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("last_emailed")
    @Getter
    @Setter
    private BigDecimal lastEmailed;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("last_opened")
    @Getter
    @Setter
    private BigDecimal lastOpened;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("updated_at")
    @Getter
    @Setter
    private BigDecimal updatedAt;

    public ContactdbRecipient200RecipientsInner() {}

    private ContactdbRecipient200RecipientsInner(Builder builder) {
        this.id = builder.id;
        this.createdAt = builder.createdAt;
        this.customFields = builder.customFields;
        this.email = builder.email;
        this.firstName = builder.firstName;
        this.lastName = builder.lastName;
        this.lastClicked = builder.lastClicked;
        this.lastEmailed = builder.lastEmailed;
        this.lastOpened = builder.lastOpened;
        this.updatedAt = builder.updatedAt;
    }

    // Builder class for constructing object
    public static class Builder {

        private String id;
        private BigDecimal createdAt;
        private List<ContactdbCustomFieldIdValue> customFields;
        private String email;
        private String firstName;
        private String lastName;
        private BigDecimal lastClicked;
        private BigDecimal lastEmailed;
        private BigDecimal lastOpened;
        private BigDecimal updatedAt;

        public Builder(String email) {
            this.email = email;
        }

        public Builder id(String id) {
            this.id = id;
            return this;
        }

        public Builder createdAt(BigDecimal createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        public Builder customFields(
            List<ContactdbCustomFieldIdValue> customFields
        ) {
            this.customFields = customFields;
            return this;
        }

        public Builder firstName(String firstName) {
            this.firstName = firstName;
            return this;
        }

        public Builder lastName(String lastName) {
            this.lastName = lastName;
            return this;
        }

        public Builder lastClicked(BigDecimal lastClicked) {
            this.lastClicked = lastClicked;
            return this;
        }

        public Builder lastEmailed(BigDecimal lastEmailed) {
            this.lastEmailed = lastEmailed;
            return this;
        }

        public Builder lastOpened(BigDecimal lastOpened) {
            this.lastOpened = lastOpened;
            return this;
        }

        public Builder updatedAt(BigDecimal updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }

        public ContactdbRecipient200RecipientsInner build() {
            return new ContactdbRecipient200RecipientsInner(this);
        }
    }

    @Override
    public String toString() {
        StringJoiner joiner = new StringJoiner(
            ", ",
            ContactdbRecipient200RecipientsInner.class.getSimpleName() + "(",
            ")"
        );
        if (id != null) joiner.add("id=" + id);
        if (createdAt != null) joiner.add("createdAt=" + createdAt);
        if (customFields != null) joiner.add("customFields=" + customFields);
        if (email != null) joiner.add("email=" + email);
        if (firstName != null) joiner.add("firstName=" + firstName);
        if (lastName != null) joiner.add("lastName=" + lastName);
        if (lastClicked != null) joiner.add("lastClicked=" + lastClicked);
        if (lastEmailed != null) joiner.add("lastEmailed=" + lastEmailed);
        if (lastOpened != null) joiner.add("lastOpened=" + lastOpened);
        if (updatedAt != null) joiner.add("updatedAt=" + updatedAt);
        return joiner.toString();
    }
}
