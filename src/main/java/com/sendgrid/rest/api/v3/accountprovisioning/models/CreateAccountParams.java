/*
 * This code was generated by
 *
 * SENDGRID-OAI-GENERATOR
 *
 * Twilio SendGrid Account Provisioning API
 * The Twilio SendGrid Account Provisioning API provides a platform for Twilio SendGrid resellers to manage their customer accounts. This API is for companies that have a formal reseller partnership with Twilio SendGrid.  You can access Twilio SendGrid sub-account functionality without becoming a reseller. If you require sub-account functionality, see the Twilio [SendGrid Subusers](https://docs.sendgrid.com/ui/account-and-settings/subusers) feature, which is available with [Pro and Premier plans](https://sendgrid.com/pricing/).
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sendgrid.rest.api.v3.accountprovisioning.models;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.sendgrid.rest.api.v3.accountprovisioning.models.AccountProvisioningOfferingV1;
import com.sendgrid.rest.api.v3.accountprovisioning.models.AccountProvisioningProfile;
import java.util.List;
import java.util.StringJoiner;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@ToString
public class CreateAccountParams {

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("profile")
    @Getter
    @Setter
    private AccountProvisioningProfile profile;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("offerings")
    @Getter
    @Setter
    private List<AccountProvisioningOfferingV1> offerings;

    public CreateAccountParams() {}

    private CreateAccountParams(Builder builder) {
        this.profile = builder.profile;
        this.offerings = builder.offerings;
    }

    // Builder class for constructing object
    public static class Builder {

        private AccountProvisioningProfile profile;
        private List<AccountProvisioningOfferingV1> offerings;

        public Builder(List<AccountProvisioningOfferingV1> offerings) {
            this.offerings = offerings;
        }

        public Builder profile(AccountProvisioningProfile profile) {
            this.profile = profile;
            return this;
        }

        public CreateAccountParams build() {
            return new CreateAccountParams(this);
        }
    }

    @Override
    public String toString() {
        StringJoiner joiner = new StringJoiner(
            ", ",
            CreateAccountParams.class.getSimpleName() + "(",
            ")"
        );
        if (profile != null) joiner.add("profile=" + profile);
        if (offerings != null) joiner.add("offerings=" + offerings);
        return joiner.toString();
    }
}
