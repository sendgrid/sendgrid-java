/*
 * This code was generated by
 *
 * SENDGRID-OAI-GENERATOR
 *
 * Twilio SendGrid Link Branding API
 * The Twilio SendGrid Link Branding API allows you to configure your domain settings so that all of the click-tracked links, opens, and images in your emails are served from your domain rather than `sendgrid.net`. Spam filters and recipient servers look at the links within emails to determine whether the email appear trustworthy. They use the reputation of the root domain to determine whether the links can be trusted.  You can also manage Link Branding in the **Sender Authentication** section of the Twilio SendGrid application user interface.   See [**How to Set Up Link Branding**](https: //sendgrid.com/docs/ui/account-and-settings/how-to-set-up-link-branding/) for more information.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sendgrid.rest.api.v3.linkbranding.models;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.sendgrid.rest.api.v3.linkbranding.models.ValidateBrandedLink200ResponseValidationResultsDomainCname;
import com.sendgrid.rest.api.v3.linkbranding.models.ValidateBrandedLink200ResponseValidationResultsOwnerCname;
import java.util.StringJoiner;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@ToString
public class ValidateBrandedLink200ResponseValidationResults {

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("domain_cname")
    @Getter
    @Setter
    private ValidateBrandedLink200ResponseValidationResultsDomainCname domainCname;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("owner_cname")
    @Getter
    @Setter
    private ValidateBrandedLink200ResponseValidationResultsOwnerCname ownerCname;

    public ValidateBrandedLink200ResponseValidationResults() {}

    private ValidateBrandedLink200ResponseValidationResults(Builder builder) {
        this.domainCname = builder.domainCname;
        this.ownerCname = builder.ownerCname;
    }

    // Builder class for constructing object
    public static class Builder {

        private ValidateBrandedLink200ResponseValidationResultsDomainCname domainCname;
        private ValidateBrandedLink200ResponseValidationResultsOwnerCname ownerCname;

        public Builder(
            ValidateBrandedLink200ResponseValidationResultsDomainCname domainCname
        ) {
            this.domainCname = domainCname;
        }

        public Builder ownerCname(
            ValidateBrandedLink200ResponseValidationResultsOwnerCname ownerCname
        ) {
            this.ownerCname = ownerCname;
            return this;
        }

        public ValidateBrandedLink200ResponseValidationResults build() {
            return new ValidateBrandedLink200ResponseValidationResults(this);
        }
    }

    @Override
    public String toString() {
        StringJoiner joiner = new StringJoiner(
            ", ",
            ValidateBrandedLink200ResponseValidationResults.class.getSimpleName() +
            "(",
            ")"
        );
        if (domainCname != null) joiner.add("domainCname=" + domainCname);
        if (ownerCname != null) joiner.add("ownerCname=" + ownerCname);
        return joiner.toString();
    }
}
