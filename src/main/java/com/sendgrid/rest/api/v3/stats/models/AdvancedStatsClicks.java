/*
 * This code was generated by
 *
 * SENDGRID-OAI-GENERATOR
 *
 * Twilio SendGrid Statistics API
 * The Twilio SendGrid Statistics API allows you to retrieve the various statistics related to your email program.  Tracking your emails is an important part of being a good sender and learning about how your users interact with your email. This includes everything from clicks and opens to looking at which browsers and mailbox providers your customers use.  SendGrid has broken up statistics in specific ways so that you can get at-a-glance data, as well as the details of how your email is being used.  Category statistics are available for the previous thirteen months only.  See [**Statistics Overview**](https://docs.sendgrid.com/ui/analytics-and-reporting/stats-overview) for more information.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sendgrid.rest.api.v3.stats.models;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.StringJoiner;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@ToString
public class AdvancedStatsClicks {

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("clicks")
    @Getter
    @Setter
    private Integer clicks;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("unique_clicks")
    @Getter
    @Setter
    private Integer uniqueClicks;

    public AdvancedStatsClicks() {}

    private AdvancedStatsClicks(Builder builder) {
        this.clicks = builder.clicks;
        this.uniqueClicks = builder.uniqueClicks;
    }

    // Builder class for constructing object
    public static class Builder {

        private Integer clicks;
        private Integer uniqueClicks;

        public Builder() {}

        public Builder clicks(Integer clicks) {
            this.clicks = clicks;
            return this;
        }

        public Builder uniqueClicks(Integer uniqueClicks) {
            this.uniqueClicks = uniqueClicks;
            return this;
        }

        public AdvancedStatsClicks build() {
            return new AdvancedStatsClicks(this);
        }
    }

    @Override
    public String toString() {
        StringJoiner joiner = new StringJoiner(
            ", ",
            AdvancedStatsClicks.class.getSimpleName() + "(",
            ")"
        );
        if (clicks != null) joiner.add("clicks=" + clicks);
        if (uniqueClicks != null) joiner.add("uniqueClicks=" + uniqueClicks);
        return joiner.toString();
    }
}
