/*
 * This code was generated by
 *
 * SENDGRID-OAI-GENERATOR
 *
 * Twilio SendGrid Link Branding API
 * The Twilio SendGrid Link Branding API allows you to configure your domain settings so that all of the click-tracked links, opens, and images in your emails are served from your domain rather than `sendgrid.net`. Spam filters and recipient servers look at the links within emails to determine whether the email appear trustworthy. They use the reputation of the root domain to determine whether the links can be trusted.  You can also manage Link Branding in the **Sender Authentication** section of the Twilio SendGrid application user interface.   See [**How to Set Up Link Branding**](https: //sendgrid.com/docs/ui/account-and-settings/how-to-set-up-link-branding/) for more information.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sendgrid.rest.api.v3.linkbranding.models;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.sendgrid.rest.api.v3.linkbranding.models.Type1;
import com.sendgrid.rest.api.v3.linkbranding.models.Valid5;
import java.util.StringJoiner;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@ToString
public class LinkBranding200DnsOwnerCname {

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("valid")
    @Getter
    @Setter
    private Valid5 valid;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("type")
    @Getter
    @Setter
    private Type1 type;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("host")
    @Getter
    @Setter
    private String host;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("data")
    @Getter
    @Setter
    private String data;

    public LinkBranding200DnsOwnerCname() {}

    private LinkBranding200DnsOwnerCname(Builder builder) {
        this.valid = builder.valid;
        this.type = builder.type;
        this.host = builder.host;
        this.data = builder.data;
    }

    // Builder class for constructing object
    public static class Builder {

        private Valid5 valid;
        private Type1 type;
        private String host;
        private String data;

        public Builder(Valid5 valid, String host, String data) {
            this.valid = valid;
            this.host = host;
            this.data = data;
        }

        public Builder type(Type1 type) {
            this.type = type;
            return this;
        }

        public LinkBranding200DnsOwnerCname build() {
            return new LinkBranding200DnsOwnerCname(this);
        }
    }

    @Override
    public String toString() {
        StringJoiner joiner = new StringJoiner(
            ", ",
            LinkBranding200DnsOwnerCname.class.getSimpleName() + "(",
            ")"
        );
        if (valid != null) joiner.add("valid=" + valid);
        if (type != null) joiner.add("type=" + type);
        if (host != null) joiner.add("host=" + host);
        if (data != null) joiner.add("data=" + data);
        return joiner.toString();
    }
}
