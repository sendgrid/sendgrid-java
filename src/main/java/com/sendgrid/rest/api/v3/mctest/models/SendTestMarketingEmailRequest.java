/*
 * This code was generated by
 *
 * SENDGRID-OAI-GENERATOR
 *
 * Twilio SendGrid Marketing Campaigns Send Test Email API
 * The Twilio SendGrid Test Email API allows you to test a marketing email by first sending it to a list of up to 10 email addresses before pushing to a contact list or segment. With this feature, you can test the layout and content of your message in multiple email clients and with multiple recipients to see how it will function in a real-world scenario.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sendgrid.rest.api.v3.mctest.models;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.StringJoiner;
import java.util.UUID;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@ToString
public class SendTestMarketingEmailRequest {

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("template_id")
    @Getter
    @Setter
    private UUID templateId;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("version_id_override")
    @Getter
    @Setter
    private UUID versionIdOverride;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("sender_id")
    @Getter
    @Setter
    private Integer senderId;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("custom_unsubscribe_url")
    @Getter
    @Setter
    private String customUnsubscribeUrl;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("suppression_group_id")
    @Getter
    @Setter
    private Integer suppressionGroupId;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("emails")
    @Getter
    @Setter
    private List<String> emails;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("from_address")
    @Getter
    @Setter
    private String fromAddress;

    public SendTestMarketingEmailRequest() {}

    private SendTestMarketingEmailRequest(Builder builder) {
        this.templateId = builder.templateId;
        this.versionIdOverride = builder.versionIdOverride;
        this.senderId = builder.senderId;
        this.customUnsubscribeUrl = builder.customUnsubscribeUrl;
        this.suppressionGroupId = builder.suppressionGroupId;
        this.emails = builder.emails;
        this.fromAddress = builder.fromAddress;
    }

    // Builder class for constructing object
    public static class Builder {

        private UUID templateId;
        private UUID versionIdOverride;
        private Integer senderId;
        private String customUnsubscribeUrl;
        private Integer suppressionGroupId;
        private List<String> emails;
        private String fromAddress;

        public Builder(UUID templateId, List<String> emails) {
            this.templateId = templateId;
            this.emails = emails;
        }

        public Builder versionIdOverride(UUID versionIdOverride) {
            this.versionIdOverride = versionIdOverride;
            return this;
        }

        public Builder senderId(Integer senderId) {
            this.senderId = senderId;
            return this;
        }

        public Builder customUnsubscribeUrl(String customUnsubscribeUrl) {
            this.customUnsubscribeUrl = customUnsubscribeUrl;
            return this;
        }

        public Builder suppressionGroupId(Integer suppressionGroupId) {
            this.suppressionGroupId = suppressionGroupId;
            return this;
        }

        public Builder fromAddress(String fromAddress) {
            this.fromAddress = fromAddress;
            return this;
        }

        public SendTestMarketingEmailRequest build() {
            return new SendTestMarketingEmailRequest(this);
        }
    }

    @Override
    public String toString() {
        StringJoiner joiner = new StringJoiner(
            ", ",
            SendTestMarketingEmailRequest.class.getSimpleName() + "(",
            ")"
        );
        if (templateId != null) joiner.add("templateId=" + templateId);
        if (versionIdOverride != null) joiner.add(
            "versionIdOverride=" + versionIdOverride
        );
        if (senderId != null) joiner.add("senderId=" + senderId);
        if (customUnsubscribeUrl != null) joiner.add(
            "customUnsubscribeUrl=" + customUnsubscribeUrl
        );
        if (suppressionGroupId != null) joiner.add(
            "suppressionGroupId=" + suppressionGroupId
        );
        if (emails != null) joiner.add("emails=" + emails);
        if (fromAddress != null) joiner.add("fromAddress=" + fromAddress);
        return joiner.toString();
    }
}
