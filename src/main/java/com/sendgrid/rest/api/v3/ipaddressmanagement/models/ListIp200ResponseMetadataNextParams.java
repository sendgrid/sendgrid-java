/*
 * This code was generated by
 *
 * SENDGRID-OAI-GENERATOR
 *
 * Twilio SendGrid IP Address Management API
 * The Twilio SendGrid IP Address Management API combines functionality that was previously split between the Twilio SendGrid [IP Address API](https://docs.sendgrid.com/api-reference/ip-address) and [IP Pools API](https://docs.sendgrid.com/api-reference/ip-pools). This functionality includes adding IP addresses to your account, assigning IP addresses to IP Pools and Subusers, among other tasks.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sendgrid.rest.api.v3.ipaddressmanagement.models;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.sendgrid.rest.api.v3.ipaddressmanagement.models.Region1;
import java.util.StringJoiner;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@ToString
public class ListIp200ResponseMetadataNextParams {

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("after_key")
    @Getter
    @Setter
    private String afterKey;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("before_key")
    @Getter
    @Setter
    private String beforeKey;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("ip")
    @Getter
    @Setter
    private String ip;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("is_leased")
    @Getter
    @Setter
    private Boolean isLeased;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("is_enabled")
    @Getter
    @Setter
    private Boolean isEnabled;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("is_parent_assigned")
    @Getter
    @Setter
    private Boolean isParentAssigned;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("pool")
    @Getter
    @Setter
    private String pool;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("start_added_at")
    @Getter
    @Setter
    private String startAddedAt;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("end_added_at")
    @Getter
    @Setter
    private String endAddedAt;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("limit")
    @Getter
    @Setter
    private String limit;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("region")
    @Getter
    @Setter
    private Region1 region;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("include_region")
    @Getter
    @Setter
    private String includeRegion;

    public ListIp200ResponseMetadataNextParams() {}

    private ListIp200ResponseMetadataNextParams(Builder builder) {
        this.afterKey = builder.afterKey;
        this.beforeKey = builder.beforeKey;
        this.ip = builder.ip;
        this.isLeased = builder.isLeased;
        this.isEnabled = builder.isEnabled;
        this.isParentAssigned = builder.isParentAssigned;
        this.pool = builder.pool;
        this.startAddedAt = builder.startAddedAt;
        this.endAddedAt = builder.endAddedAt;
        this.limit = builder.limit;
        this.region = builder.region;
        this.includeRegion = builder.includeRegion;
    }

    // Builder class for constructing object
    public static class Builder {

        private String afterKey;
        private String beforeKey;
        private String ip;
        private Boolean isLeased;
        private Boolean isEnabled;
        private Boolean isParentAssigned;
        private String pool;
        private String startAddedAt;
        private String endAddedAt;
        private String limit;
        private Region1 region;
        private String includeRegion;

        public Builder() {}

        public Builder afterKey(String afterKey) {
            this.afterKey = afterKey;
            return this;
        }

        public Builder beforeKey(String beforeKey) {
            this.beforeKey = beforeKey;
            return this;
        }

        public Builder ip(String ip) {
            this.ip = ip;
            return this;
        }

        public Builder isLeased(Boolean isLeased) {
            this.isLeased = isLeased;
            return this;
        }

        public Builder isEnabled(Boolean isEnabled) {
            this.isEnabled = isEnabled;
            return this;
        }

        public Builder isParentAssigned(Boolean isParentAssigned) {
            this.isParentAssigned = isParentAssigned;
            return this;
        }

        public Builder pool(String pool) {
            this.pool = pool;
            return this;
        }

        public Builder startAddedAt(String startAddedAt) {
            this.startAddedAt = startAddedAt;
            return this;
        }

        public Builder endAddedAt(String endAddedAt) {
            this.endAddedAt = endAddedAt;
            return this;
        }

        public Builder limit(String limit) {
            this.limit = limit;
            return this;
        }

        public Builder region(Region1 region) {
            this.region = region;
            return this;
        }

        public Builder includeRegion(String includeRegion) {
            this.includeRegion = includeRegion;
            return this;
        }

        public ListIp200ResponseMetadataNextParams build() {
            return new ListIp200ResponseMetadataNextParams(this);
        }
    }

    @Override
    public String toString() {
        StringJoiner joiner = new StringJoiner(
            ", ",
            ListIp200ResponseMetadataNextParams.class.getSimpleName() + "(",
            ")"
        );
        if (afterKey != null) joiner.add("afterKey=" + afterKey);
        if (beforeKey != null) joiner.add("beforeKey=" + beforeKey);
        if (ip != null) joiner.add("ip=" + ip);
        if (isLeased != null) joiner.add("isLeased=" + isLeased);
        if (isEnabled != null) joiner.add("isEnabled=" + isEnabled);
        if (isParentAssigned != null) joiner.add(
            "isParentAssigned=" + isParentAssigned
        );
        if (pool != null) joiner.add("pool=" + pool);
        if (startAddedAt != null) joiner.add("startAddedAt=" + startAddedAt);
        if (endAddedAt != null) joiner.add("endAddedAt=" + endAddedAt);
        if (limit != null) joiner.add("limit=" + limit);
        if (region != null) joiner.add("region=" + region);
        if (includeRegion != null) joiner.add("includeRegion=" + includeRegion);
        return joiner.toString();
    }
}
