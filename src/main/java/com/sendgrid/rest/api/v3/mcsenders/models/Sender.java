/*
 * This code was generated by
 *
 * SENDGRID-OAI-GENERATOR
 *
 * Twilio SendGrid Marketing Campaigns Senders API
 * The Twilio SendGrid Marketing Campaigns Senders API allows you to create a verified sender from which your marketing emails will be sent. To ensure our customers maintain the best possible sender reputations and to uphold legitimate sending behavior, we require customers to verify their Senders. A Sender represents your “From” email address—the address your recipients will see as the sender of your emails.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sendgrid.rest.api.v3.mcsenders.models;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.sendgrid.rest.api.v3.mcsenders.models.CreateSenderRequestFrom;
import com.sendgrid.rest.api.v3.mcsenders.models.CreateSenderRequestReplyTo;
import java.util.StringJoiner;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@ToString
public class Sender {

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("id")
    @Getter
    @Setter
    private Integer id;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("nickname")
    @Getter
    @Setter
    private String nickname;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("from")
    @Getter
    @Setter
    private CreateSenderRequestFrom from;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("reply_to")
    @Getter
    @Setter
    private CreateSenderRequestReplyTo replyTo;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("address")
    @Getter
    @Setter
    private String address;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("address_2")
    @Getter
    @Setter
    private String address2;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("city")
    @Getter
    @Setter
    private String city;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("state")
    @Getter
    @Setter
    private String state;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("zip")
    @Getter
    @Setter
    private String zip;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("country")
    @Getter
    @Setter
    private String country;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("verified")
    @Getter
    @Setter
    private Boolean verified;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("locked")
    @Getter
    @Setter
    private Boolean locked;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("updated_at")
    @Getter
    @Setter
    private Integer updatedAt;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("created_at")
    @Getter
    @Setter
    private Integer createdAt;

    public Sender() {}

    private Sender(Builder builder) {
        this.id = builder.id;
        this.nickname = builder.nickname;
        this.from = builder.from;
        this.replyTo = builder.replyTo;
        this.address = builder.address;
        this.address2 = builder.address2;
        this.city = builder.city;
        this.state = builder.state;
        this.zip = builder.zip;
        this.country = builder.country;
        this.verified = builder.verified;
        this.locked = builder.locked;
        this.updatedAt = builder.updatedAt;
        this.createdAt = builder.createdAt;
    }

    // Builder class for constructing object
    public static class Builder {

        private Integer id;
        private String nickname;
        private CreateSenderRequestFrom from;
        private CreateSenderRequestReplyTo replyTo;
        private String address;
        private String address2;
        private String city;
        private String state;
        private String zip;
        private String country;
        private Boolean verified;
        private Boolean locked;
        private Integer updatedAt;
        private Integer createdAt;

        public Builder(
            Integer id,
            String nickname,
            CreateSenderRequestFrom from,
            CreateSenderRequestReplyTo replyTo,
            String address,
            String city,
            String country,
            Boolean verified,
            Boolean locked,
            Integer updatedAt,
            Integer createdAt
        ) {
            this.id = id;
            this.nickname = nickname;
            this.from = from;
            this.replyTo = replyTo;
            this.address = address;
            this.city = city;
            this.country = country;
            this.verified = verified;
            this.locked = locked;
            this.updatedAt = updatedAt;
            this.createdAt = createdAt;
        }

        public Builder address2(String address2) {
            this.address2 = address2;
            return this;
        }

        public Builder state(String state) {
            this.state = state;
            return this;
        }

        public Builder zip(String zip) {
            this.zip = zip;
            return this;
        }

        public Sender build() {
            return new Sender(this);
        }
    }

    @Override
    public String toString() {
        StringJoiner joiner = new StringJoiner(
            ", ",
            Sender.class.getSimpleName() + "(",
            ")"
        );
        if (id != null) joiner.add("id=" + id);
        if (nickname != null) joiner.add("nickname=" + nickname);
        if (from != null) joiner.add("from=" + from);
        if (replyTo != null) joiner.add("replyTo=" + replyTo);
        if (address != null) joiner.add("address=" + address);
        if (address2 != null) joiner.add("address2=" + address2);
        if (city != null) joiner.add("city=" + city);
        if (state != null) joiner.add("state=" + state);
        if (zip != null) joiner.add("zip=" + zip);
        if (country != null) joiner.add("country=" + country);
        if (verified != null) joiner.add("verified=" + verified);
        if (locked != null) joiner.add("locked=" + locked);
        if (updatedAt != null) joiner.add("updatedAt=" + updatedAt);
        if (createdAt != null) joiner.add("createdAt=" + createdAt);
        return joiner.toString();
    }
}
