/*
 * This code was generated by
 *
 * SENDGRID-OAI-GENERATOR
 *
 * Twilio SendGrid Webhook Configuration API
 * The Twilio SendGrid Webhooks API allows you to configure the Event and Parse Webhooks.  Email is a data-rich channel, and implementing the Event Webhook will allow you to consume those data in nearly real time. This means you can actively monitor and participate in the health of your email program throughout the send cycle.  The Inbound Parse Webhook processes all incoming email for a domain or subdomain, parses the contents and attachments and then POSTs `multipart/form-data` to a URL that you choose.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sendgrid.rest.api.v3.webhooks.models;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.StringJoiner;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@ToString
public class EventWebhookOauthResponseProps {

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("oauth_client_id")
    @Getter
    @Setter
    private String oauthClientId;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("oauth_token_url")
    @Getter
    @Setter
    private String oauthTokenUrl;

    public EventWebhookOauthResponseProps() {}

    private EventWebhookOauthResponseProps(Builder builder) {
        this.oauthClientId = builder.oauthClientId;
        this.oauthTokenUrl = builder.oauthTokenUrl;
    }

    // Builder class for constructing object
    public static class Builder {

        private String oauthClientId;
        private String oauthTokenUrl;

        public Builder() {}

        public Builder oauthClientId(String oauthClientId) {
            this.oauthClientId = oauthClientId;
            return this;
        }

        public Builder oauthTokenUrl(String oauthTokenUrl) {
            this.oauthTokenUrl = oauthTokenUrl;
            return this;
        }

        public EventWebhookOauthResponseProps build() {
            return new EventWebhookOauthResponseProps(this);
        }
    }

    @Override
    public String toString() {
        StringJoiner joiner = new StringJoiner(
            ", ",
            EventWebhookOauthResponseProps.class.getSimpleName() + "(",
            ")"
        );
        if (oauthClientId != null) joiner.add("oauthClientId=" + oauthClientId);
        if (oauthTokenUrl != null) joiner.add("oauthTokenUrl=" + oauthTokenUrl);
        return joiner.toString();
    }
}
