/*
 * This code was generated by
 *
 * SENDGRID-OAI-GENERATOR
 *
 * Twilio SendGrid Teammates API
 * The Twilio SendGrid Teammates API allows you to add, manage, and remove Teammates, or user accounts, from your SendGrid account. Teammates function like user accounts on the SendGrid account, allowing you to invite additional users to your account with scoped access. You can think of Teammates as SendGrid's approach to enabling [role-based access control](https://en.wikipedia.org/wiki/Role-based_access_control) for your SendGrid account. For even more control over the access to your account, see the [Twilio SendGrid SSO API](https://docs.sendgrid.com/api-reference/single-sign-on-teammates/), which enables SSO-authenticated Teammates to be managed through a SAML 2.0 identity provider.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sendgrid.rest.api.v3.teammates.models;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.sendgrid.rest.api.v3.teammates.models.ListSubuserByTemplate200ResponseMetadataNextParams;
import java.util.StringJoiner;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@ToString
public class ListSubuserByTemplate200ResponseMetadata {

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("next_params")
    @Getter
    @Setter
    private ListSubuserByTemplate200ResponseMetadataNextParams nextParams;

    public ListSubuserByTemplate200ResponseMetadata() {}

    private ListSubuserByTemplate200ResponseMetadata(Builder builder) {
        this.nextParams = builder.nextParams;
    }

    // Builder class for constructing object
    public static class Builder {

        private ListSubuserByTemplate200ResponseMetadataNextParams nextParams;

        public Builder() {}

        public Builder nextParams(
            ListSubuserByTemplate200ResponseMetadataNextParams nextParams
        ) {
            this.nextParams = nextParams;
            return this;
        }

        public ListSubuserByTemplate200ResponseMetadata build() {
            return new ListSubuserByTemplate200ResponseMetadata(this);
        }
    }

    @Override
    public String toString() {
        StringJoiner joiner = new StringJoiner(
            ", ",
            ListSubuserByTemplate200ResponseMetadata.class.getSimpleName() +
            "(",
            ")"
        );
        if (nextParams != null) joiner.add("nextParams=" + nextParams);
        return joiner.toString();
    }
}
