/*
 * This code was generated by
 *
 * SENDGRID-OAI-GENERATOR
 *
 * Twilio SendGrid Mail API
 * The Twilio SendGrid v3 Mail API allows you to send email at scale over HTTP. The Mail Send endpoint supports many levels of functionality, allowing you to send templates, set categories and custom arguments that can be used to analyze your send, and configure which tracking settings to include such as opens and clicks. You can also group mail sends into batches, allowing you to schedule and cancel sends by their batch IDs.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sendgrid.rest.api.v3.mail.models;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.sendgrid.rest.api.v3.mail.models.Disposition;
import java.util.StringJoiner;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@ToString
public class SendMailRequestAttachmentsInner {

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("content")
    @Getter
    @Setter
    private String content;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("type")
    @Getter
    @Setter
    private String type;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("filename")
    @Getter
    @Setter
    private String filename;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("disposition")
    @Getter
    @Setter
    private Disposition disposition;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("content_id")
    @Getter
    @Setter
    private String contentId;

    public SendMailRequestAttachmentsInner() {}

    private SendMailRequestAttachmentsInner(Builder builder) {
        this.content = builder.content;
        this.type = builder.type;
        this.filename = builder.filename;
        this.disposition = builder.disposition;
        this.contentId = builder.contentId;
    }

    // Builder class for constructing object
    public static class Builder {

        private String content;
        private String type;
        private String filename;
        private Disposition disposition;
        private String contentId;

        public Builder(String content, String filename) {
            this.content = content;
            this.filename = filename;
        }

        public Builder type(String type) {
            this.type = type;
            return this;
        }

        public Builder disposition(Disposition disposition) {
            this.disposition = disposition;
            return this;
        }

        public Builder contentId(String contentId) {
            this.contentId = contentId;
            return this;
        }

        public SendMailRequestAttachmentsInner build() {
            return new SendMailRequestAttachmentsInner(this);
        }
    }

    @Override
    public String toString() {
        StringJoiner joiner = new StringJoiner(
            ", ",
            SendMailRequestAttachmentsInner.class.getSimpleName() + "(",
            ")"
        );
        if (content != null) joiner.add("content=" + content);
        if (type != null) joiner.add("type=" + type);
        if (filename != null) joiner.add("filename=" + filename);
        if (disposition != null) joiner.add("disposition=" + disposition);
        if (contentId != null) joiner.add("contentId=" + contentId);
        return joiner.toString();
    }
}
