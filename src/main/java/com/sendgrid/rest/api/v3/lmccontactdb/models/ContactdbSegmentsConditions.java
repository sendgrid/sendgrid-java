/*
 * This code was generated by
 *
 * SENDGRID-OAI-GENERATOR
 *
 * Twilio SendGrid Legacy Marketing Campaigns Contacts API
 * The Twilio SendGrid Legacy Marketing Campaigns Contacts API allows you to manage your marketing contacts programmatically. This API is operational, but we recommend using the current version of Marketing Campaigns' [Contacts API](https://docs.sendgrid.com/api-reference/contacts/), [Lists API](https://docs.sendgrid.com/api-reference/lists/), and [Segments API](https://docs.sendgrid.com/api-reference/segmenting-contacts-v2/) to manage your contacts.  See [**Migrating from Legacy Marketing Campaigns**](https://docs.sendgrid.com/ui/sending-email/migrating-from-legacy-marketing-campaigns) for more information.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sendgrid.rest.api.v3.lmccontactdb.models;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.sendgrid.rest.api.v3.lmccontactdb.models.AndOr;
import com.sendgrid.rest.api.v3.lmccontactdb.models.Operator;
import java.util.StringJoiner;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@ToString
public class ContactdbSegmentsConditions {

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("field")
    @Getter
    @Setter
    private String field;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("value")
    @Getter
    @Setter
    private String value;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("operator")
    @Getter
    @Setter
    private Operator operator;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("and_or")
    @Getter
    @Setter
    private AndOr andOr;

    public ContactdbSegmentsConditions() {}

    private ContactdbSegmentsConditions(Builder builder) {
        this.field = builder.field;
        this.value = builder.value;
        this.operator = builder.operator;
        this.andOr = builder.andOr;
    }

    // Builder class for constructing object
    public static class Builder {

        private String field;
        private String value;
        private Operator operator;
        private AndOr andOr;

        public Builder(String field, String value, Operator operator) {
            this.field = field;
            this.value = value;
            this.operator = operator;
        }

        public Builder andOr(AndOr andOr) {
            this.andOr = andOr;
            return this;
        }

        public ContactdbSegmentsConditions build() {
            return new ContactdbSegmentsConditions(this);
        }
    }

    @Override
    public String toString() {
        StringJoiner joiner = new StringJoiner(
            ", ",
            ContactdbSegmentsConditions.class.getSimpleName() + "(",
            ")"
        );
        if (field != null) joiner.add("field=" + field);
        if (value != null) joiner.add("value=" + value);
        if (operator != null) joiner.add("operator=" + operator);
        if (andOr != null) joiner.add("andOr=" + andOr);
        return joiner.toString();
    }
}
