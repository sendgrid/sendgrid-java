/*
 * This code was generated by
 *
 * SENDGRID-OAI-GENERATOR
 *
 * Twilio SendGrid Marketing Campaigns Contacts API
 * The Twilio SendGrid Marketing Campaigns Contacts API allows you to manage all of your marketing contacts programmatically. You can also import and export contacts using this API. The Contacts API allows you to associate contacts with lists and segments; however, to manage the lists and segments themselves, see the [Lists API](https://docs.sendgrid.com/api-reference/lists/) and [Segments API](https://docs.sendgrid.com/api-reference/segmenting-contacts-v2/).  You can also manage your marketing contacts with the [Marketing Campaigns application user interface](https://mc.sendgrid.com/contacts). See [**How to Send Email with New Marketing Campaigns**](https://docs.sendgrid.com/ui/sending-email/how-to-send-email-with-marketing-campaigns) for more information.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sendgrid.rest.api.v3.mccontacts.models;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.StringJoiner;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@ToString
public class ListContactByEmailRequest {

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("emails")
    @Getter
    @Setter
    private List<String> emails;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("phone_number_id")
    @Getter
    @Setter
    private String phoneNumberId;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("external_id")
    @Getter
    @Setter
    private String externalId;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("anonymous_id")
    @Getter
    @Setter
    private String anonymousId;

    public ListContactByEmailRequest() {}

    private ListContactByEmailRequest(Builder builder) {
        this.emails = builder.emails;
        this.phoneNumberId = builder.phoneNumberId;
        this.externalId = builder.externalId;
        this.anonymousId = builder.anonymousId;
    }

    // Builder class for constructing object
    public static class Builder {

        private List<String> emails;
        private String phoneNumberId;
        private String externalId;
        private String anonymousId;

        public Builder(List<String> emails) {
            this.emails = emails;
        }

        public Builder phoneNumberId(String phoneNumberId) {
            this.phoneNumberId = phoneNumberId;
            return this;
        }

        public Builder externalId(String externalId) {
            this.externalId = externalId;
            return this;
        }

        public Builder anonymousId(String anonymousId) {
            this.anonymousId = anonymousId;
            return this;
        }

        public ListContactByEmailRequest build() {
            return new ListContactByEmailRequest(this);
        }
    }

    @Override
    public String toString() {
        StringJoiner joiner = new StringJoiner(
            ", ",
            ListContactByEmailRequest.class.getSimpleName() + "(",
            ")"
        );
        if (emails != null) joiner.add("emails=" + emails);
        if (phoneNumberId != null) joiner.add("phoneNumberId=" + phoneNumberId);
        if (externalId != null) joiner.add("externalId=" + externalId);
        if (anonymousId != null) joiner.add("anonymousId=" + anonymousId);
        return joiner.toString();
    }
}
