/*
 * This code was generated by
 *
 * SENDGRID-OAI-GENERATOR
 *
 * Twilio SendGrid Legacy Marketing Campaigns Campaigns API
 * The Twilio SendGrid Legacy Marketing Campaigns Campaigns API allows you to manage your marketing email messages programmatically. This API is operational, but we recommend using the current version of Marketing Campaigns to manage your marketing messages with SendGrid [Single Sends](https://docs.sendgrid.com/api-reference/single-sends/) and [Automations](https://docs.sendgrid.com/ui/sending-email/getting-started-with-automation).  See [**Migrating from Legacy Marketing Campaigns**](https://docs.sendgrid.com/ui/sending-email/migrating-from-legacy-marketing-campaigns) for more information.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sendgrid.rest.api.v3.lmccampaigns.models;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.StringJoiner;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@ToString
public class UpdateACampaignRequest {

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("title")
    @Getter
    @Setter
    private String title;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("subject")
    @Getter
    @Setter
    private String subject;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("categories")
    @Getter
    @Setter
    private List<String> categories;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("html_content")
    @Getter
    @Setter
    private String htmlContent;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("plain_content")
    @Getter
    @Setter
    private String plainContent;

    public UpdateACampaignRequest() {}

    private UpdateACampaignRequest(Builder builder) {
        this.title = builder.title;
        this.subject = builder.subject;
        this.categories = builder.categories;
        this.htmlContent = builder.htmlContent;
        this.plainContent = builder.plainContent;
    }

    // Builder class for constructing object
    public static class Builder {

        private String title;
        private String subject;
        private List<String> categories;
        private String htmlContent;
        private String plainContent;

        public Builder(
            String title,
            String subject,
            List<String> categories,
            String htmlContent,
            String plainContent
        ) {
            this.title = title;
            this.subject = subject;
            this.categories = categories;
            this.htmlContent = htmlContent;
            this.plainContent = plainContent;
        }

        public UpdateACampaignRequest build() {
            return new UpdateACampaignRequest(this);
        }
    }

    @Override
    public String toString() {
        StringJoiner joiner = new StringJoiner(
            ", ",
            UpdateACampaignRequest.class.getSimpleName() + "(",
            ")"
        );
        if (title != null) joiner.add("title=" + title);
        if (subject != null) joiner.add("subject=" + subject);
        if (categories != null) joiner.add("categories=" + categories);
        if (htmlContent != null) joiner.add("htmlContent=" + htmlContent);
        if (plainContent != null) joiner.add("plainContent=" + plainContent);
        return joiner.toString();
    }
}
