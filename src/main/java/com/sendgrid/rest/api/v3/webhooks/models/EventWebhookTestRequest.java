/*
 * This code was generated by
 *
 * SENDGRID-OAI-GENERATOR
 *
 * Twilio SendGrid Webhook Configuration API
 * The Twilio SendGrid Webhooks API allows you to configure the Event and Parse Webhooks.  Email is a data-rich channel, and implementing the Event Webhook will allow you to consume those data in nearly real time. This means you can actively monitor and participate in the health of your email program throughout the send cycle.  The Inbound Parse Webhook processes all incoming email for a domain or subdomain, parses the contents and attachments and then POSTs `multipart/form-data` to a URL that you choose.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sendgrid.rest.api.v3.webhooks.models;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.StringJoiner;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@ToString
public class EventWebhookTestRequest {

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("id")
    @Getter
    @Setter
    private String id;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("url")
    @Getter
    @Setter
    private String url;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("oauth_client_id")
    @Getter
    @Setter
    private String oauthClientId;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("oauth_client_secret")
    @Getter
    @Setter
    private String oauthClientSecret;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("oauth_token_url")
    @Getter
    @Setter
    private String oauthTokenUrl;

    public EventWebhookTestRequest() {}

    private EventWebhookTestRequest(Builder builder) {
        this.id = builder.id;
        this.url = builder.url;
        this.oauthClientId = builder.oauthClientId;
        this.oauthClientSecret = builder.oauthClientSecret;
        this.oauthTokenUrl = builder.oauthTokenUrl;
    }

    // Builder class for constructing object
    public static class Builder {

        private String id;
        private String url;
        private String oauthClientId;
        private String oauthClientSecret;
        private String oauthTokenUrl;

        public Builder(String url) {
            this.url = url;
        }

        public Builder id(String id) {
            this.id = id;
            return this;
        }

        public Builder oauthClientId(String oauthClientId) {
            this.oauthClientId = oauthClientId;
            return this;
        }

        public Builder oauthClientSecret(String oauthClientSecret) {
            this.oauthClientSecret = oauthClientSecret;
            return this;
        }

        public Builder oauthTokenUrl(String oauthTokenUrl) {
            this.oauthTokenUrl = oauthTokenUrl;
            return this;
        }

        public EventWebhookTestRequest build() {
            return new EventWebhookTestRequest(this);
        }
    }

    @Override
    public String toString() {
        StringJoiner joiner = new StringJoiner(
            ", ",
            EventWebhookTestRequest.class.getSimpleName() + "(",
            ")"
        );
        if (id != null) joiner.add("id=" + id);
        if (url != null) joiner.add("url=" + url);
        if (oauthClientId != null) joiner.add("oauthClientId=" + oauthClientId);
        if (oauthClientSecret != null) joiner.add(
            "oauthClientSecret=" + oauthClientSecret
        );
        if (oauthTokenUrl != null) joiner.add("oauthTokenUrl=" + oauthTokenUrl);
        return joiner.toString();
    }
}
