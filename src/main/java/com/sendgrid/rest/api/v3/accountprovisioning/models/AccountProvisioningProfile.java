/*
 * This code was generated by
 *
 * SENDGRID-OAI-GENERATOR
 *
 * Twilio SendGrid Account Provisioning API
 * The Twilio SendGrid Account Provisioning API provides a platform for Twilio SendGrid resellers to manage their customer accounts. This API is for companies that have a formal reseller partnership with Twilio SendGrid.  You can access Twilio SendGrid sub-account functionality without becoming a reseller. If you require sub-account functionality, see the Twilio [SendGrid Subusers](https://docs.sendgrid.com/ui/account-and-settings/subusers) feature, which is available with [Pro and Premier plans](https://sendgrid.com/pricing/).
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sendgrid.rest.api.v3.accountprovisioning.models;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.StringJoiner;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@ToString
public class AccountProvisioningProfile {

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("first_name")
    @Getter
    @Setter
    private String firstName;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("last_name")
    @Getter
    @Setter
    private String lastName;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("company_name")
    @Getter
    @Setter
    private String companyName;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("company_website")
    @Getter
    @Setter
    private String companyWebsite;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("email")
    @Getter
    @Setter
    private String email;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("phone")
    @Getter
    @Setter
    private String phone;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("timezone")
    @Getter
    @Setter
    private String timezone;

    public AccountProvisioningProfile() {}

    private AccountProvisioningProfile(Builder builder) {
        this.firstName = builder.firstName;
        this.lastName = builder.lastName;
        this.companyName = builder.companyName;
        this.companyWebsite = builder.companyWebsite;
        this.email = builder.email;
        this.phone = builder.phone;
        this.timezone = builder.timezone;
    }

    // Builder class for constructing object
    public static class Builder {

        private String firstName;
        private String lastName;
        private String companyName;
        private String companyWebsite;
        private String email;
        private String phone;
        private String timezone;

        public Builder() {}

        public Builder firstName(String firstName) {
            this.firstName = firstName;
            return this;
        }

        public Builder lastName(String lastName) {
            this.lastName = lastName;
            return this;
        }

        public Builder companyName(String companyName) {
            this.companyName = companyName;
            return this;
        }

        public Builder companyWebsite(String companyWebsite) {
            this.companyWebsite = companyWebsite;
            return this;
        }

        public Builder email(String email) {
            this.email = email;
            return this;
        }

        public Builder phone(String phone) {
            this.phone = phone;
            return this;
        }

        public Builder timezone(String timezone) {
            this.timezone = timezone;
            return this;
        }

        public AccountProvisioningProfile build() {
            return new AccountProvisioningProfile(this);
        }
    }

    @Override
    public String toString() {
        StringJoiner joiner = new StringJoiner(
            ", ",
            AccountProvisioningProfile.class.getSimpleName() + "(",
            ")"
        );
        if (firstName != null) joiner.add("firstName=" + firstName);
        if (lastName != null) joiner.add("lastName=" + lastName);
        if (companyName != null) joiner.add("companyName=" + companyName);
        if (companyWebsite != null) joiner.add(
            "companyWebsite=" + companyWebsite
        );
        if (email != null) joiner.add("email=" + email);
        if (phone != null) joiner.add("phone=" + phone);
        if (timezone != null) joiner.add("timezone=" + timezone);
        return joiner.toString();
    }
}
