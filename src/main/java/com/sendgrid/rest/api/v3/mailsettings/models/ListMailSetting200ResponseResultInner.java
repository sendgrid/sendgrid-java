/*
 * This code was generated by
 *
 * SENDGRID-OAI-GENERATOR
 *
 * Twilio SendGrid Mail Settings API
 * The Twilio SendGrid Mail Settings API allows you to retrieve and configure the various Mail Settings available. Mail Settings instruct SendGrid to apply specific settings to every email that you send over [SendGridâ€™s Web API](https://docs.sendgrid.com/api-reference/mail-send/v3-mail-send) or [SMTP relay](https://sendgrid.com/docs/for-developers/sending-email/building-an-x-smtpapi-header/). These settings include how to embed a custom footer, how to manage blocks, spam, and bounces, and more.  For a full list of Twilio SendGrid's Mail Settings, and what each one does, see [**Mail Settings**](https://sendgrid.com/docs/ui/account-and-settings/mail/).  You can also manage your Mail Settings in the Twilio SendGrid application user interface.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sendgrid.rest.api.v3.mailsettings.models;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.StringJoiner;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@ToString
public class ListMailSetting200ResponseResultInner {

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("title")
    @Getter
    @Setter
    private String title;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("enabled")
    @Getter
    @Setter
    private Boolean enabled;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("name")
    @Getter
    @Setter
    private String name;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("description")
    @Getter
    @Setter
    private String description;

    public ListMailSetting200ResponseResultInner() {}

    private ListMailSetting200ResponseResultInner(Builder builder) {
        this.title = builder.title;
        this.enabled = builder.enabled;
        this.name = builder.name;
        this.description = builder.description;
    }

    // Builder class for constructing object
    public static class Builder {

        private String title;
        private Boolean enabled;
        private String name;
        private String description;

        public Builder(
            String title,
            Boolean enabled,
            String name,
            String description
        ) {
            this.title = title;
            this.enabled = enabled;
            this.name = name;
            this.description = description;
        }

        public ListMailSetting200ResponseResultInner build() {
            return new ListMailSetting200ResponseResultInner(this);
        }
    }

    @Override
    public String toString() {
        StringJoiner joiner = new StringJoiner(
            ", ",
            ListMailSetting200ResponseResultInner.class.getSimpleName() + "(",
            ")"
        );
        if (title != null) joiner.add("title=" + title);
        if (enabled != null) joiner.add("enabled=" + enabled);
        if (name != null) joiner.add("name=" + name);
        if (description != null) joiner.add("description=" + description);
        return joiner.toString();
    }
}
