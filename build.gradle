/**
 * Commands:
 *   - gradle build
 *   - gradle test
 *   - gradle assemble
 *   - gradle uploadArchives
 *
 * To execute the 'uploadArchives' task, the following properties must be specified
 * in an external 'gradle.properties' file:
 *   - sonatypeUsername
 *   - sonatypePassword
 */

apply plugin: 'java'
apply plugin: 'fatjar'
apply plugin: 'maven'
apply plugin: 'signing'

group         = 'com.flozano.sendgrid'
version       = '2.2.2'
ext.packaging = 'jar'

allprojects {
  apply plugin: 'java'
  sourceCompatibility = 1.8
  targetCompatibility = 1.8
}

if (!hasProperty("sonatypeUsername")) {
  ext.sonatypeUsername = null
  ext.sonatypePassword = null
}

task wrapper(type: Wrapper) {
  gradleVersion = '1.12'
}

buildscript {
  dependencies {
    classpath 'eu.appsatori:gradle-fatjar-plugin:0.1.2' // adds fatJar task
  }
  repositories {
    mavenCentral()
  }
}

dependencies {
  compile 'com.sendgrid:smtpapi-java:1.2.0'
  compile 'org.apache.httpcomponents:httpcore:4.4.4'
  compile 'org.apache.httpcomponents:httpclient:4.5.2'
  compile 'org.apache.httpcomponents:httpmime:4.5.2'
  compile 'org.apache.httpcomponents:httpasyncclient:4.1.1'
  compile 'org.json:json:20140107'
  testCompile group: 'junit', name: 'junit', version: '4.12'
  testCompile group: 'org.skyscreamer', name: 'jsonassert', version: '1.2.3'
  testCompile 'org.mock-server:mockserver-netty:3.10.4'
  testCompile 'com.jayway.awaitility:awaitility:1.7.0'
}

repositories {
  mavenCentral()
}

allprojects {
  gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
      options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
      }
  }
}

// adds 'with-dependencies' to the fatJar name
fatJar {
  classifier 'jar'
  baseName "async-sendgrid"
  manifest {
    attributes("Implementation-Title": "SendGrid", "Implementation-Version": version)
  }
}

// copy fatJar to base project directory so they will be in git (and on github for download)
build << {
  copy {
    println "Copying ${fatJar.archiveName} to $projectDir/repo/com/flozano/sendgrid/$version"
    from("$buildDir/libs/${fatJar.archiveName}")
    into("$projectDir/repo/com/flozano/sendgrid/$version")
  }
  copy {
    println "Copying ${fatJar.archiveName} to $projectDir/repo/com/flozano/sendgrid"
    from("$buildDir/libs/${fatJar.archiveName}")
    into("$projectDir/repo/com/sendgrid")
  }
  tasks.renameSendGridVersionJarToSendGridJar.execute()
}

task renameSendGridVersionJarToSendGridJar {
  doLast {
    file("$projectDir/repo/com/flozano/sendgrid/${fatJar.archiveName}").renameTo(file("$projectDir/repo/com/flozano/sendgrid/async-sendgrid-jar.jar"))
  }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
  from sourceSets.main.allSource
  classifier = 'sources'
}

signing {
  required { gradle.taskGraph.hasTask("uploadArchives") }
  sign configurations.archives
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: sonatypeUsername, password: sonatypePassword)
      }

      pom.project {
        name 'async-sendgrid-java'
        packaging 'jar'
        description 'Fork of SendGrid Java helper library that uses async HTTP client'
        url 'https://github.com/flozano/sendgrid-java'

        scm {
          url 'scm:git@github.com:flozano/sendgrid-java.git'
          connection 'scm:git@github.com:flozano/sendgrid-java.git'
          developerConnection 'scm:git@github.com:flozano/sendgrid-java.git'
        }

        licenses {
          license {
            name 'MIT License'
            url 'http://opensource.org/licenses/MIT'
            distribution 'repo'
          }
        }

        developers {
          developer {
            id 'scottmotte'
            name 'Scott Motte'
          }
          developer {
            id 'elbou8'
            name 'Yamil Asusta'
          }
          developer {
            id 'eddiezane'
            name 'Eddie Zaneski'
          }
          developer {
            id 'flozano'
            name 'Francisco A. Lozano'
          }
        }
      }
    }
  }
}

artifacts {
  archives fatJar
  archives jar
  archives javadocJar
  archives sourcesJar
}
