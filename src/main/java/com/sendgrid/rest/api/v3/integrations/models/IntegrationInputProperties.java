/*
 * This code was generated by
 *
 * SENDGRID-OAI-GENERATOR
 *
 * Twilio SendGrid Integrations API
 * Integrations allows you to connect your SendGrid applications with third-party services and forward SendGrid email events to those external applications. Currently, Integrations supports event forwarding to [Segment](https://segment.com/docs). You can use this API to create, delete, view, and update your Integrations.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sendgrid.rest.api.v3.integrations.models;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.sendgrid.rest.api.v3.integrations.models.DestinationRegion1;
import java.util.StringJoiner;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@ToString
public class IntegrationInputProperties {

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("write_key")
    @Getter
    @Setter
    private String writeKey;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("destination_region")
    @Getter
    @Setter
    private DestinationRegion1 destinationRegion;

    public IntegrationInputProperties() {}

    private IntegrationInputProperties(Builder builder) {
        this.writeKey = builder.writeKey;
        this.destinationRegion = builder.destinationRegion;
    }

    // Builder class for constructing object
    public static class Builder {

        private String writeKey;
        private DestinationRegion1 destinationRegion;

        public Builder(String writeKey, DestinationRegion1 destinationRegion) {
            this.writeKey = writeKey;
            this.destinationRegion = destinationRegion;
        }

        public IntegrationInputProperties build() {
            return new IntegrationInputProperties(this);
        }
    }

    @Override
    public String toString() {
        StringJoiner joiner = new StringJoiner(
            ", ",
            IntegrationInputProperties.class.getSimpleName() + "(",
            ")"
        );
        if (writeKey != null) joiner.add("writeKey=" + writeKey);
        if (destinationRegion != null) joiner.add(
            "destinationRegion=" + destinationRegion
        );
        return joiner.toString();
    }
}
