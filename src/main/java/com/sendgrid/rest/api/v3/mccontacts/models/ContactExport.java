/*
 * This code was generated by
 *
 * SENDGRID-OAI-GENERATOR
 *
 * Twilio SendGrid Marketing Campaigns Contacts API
 * The Twilio SendGrid Marketing Campaigns Contacts API allows you to manage all of your marketing contacts programmatically. You can also import and export contacts using this API. The Contacts API allows you to associate contacts with lists and segments; however, to manage the lists and segments themselves, see the [Lists API](https://docs.sendgrid.com/api-reference/lists/) and [Segments API](https://docs.sendgrid.com/api-reference/segmenting-contacts-v2/).  You can also manage your marketing contacts with the [Marketing Campaigns application user interface](https://mc.sendgrid.com/contacts). See [**How to Send Email with New Marketing Campaigns**](https://docs.sendgrid.com/ui/sending-email/how-to-send-email-with-marketing-campaigns) for more information.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sendgrid.rest.api.v3.mccontacts.models;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.sendgrid.rest.api.v3.mccontacts.models.Metadata;
import com.sendgrid.rest.api.v3.mccontacts.models.Status;
import java.util.List;
import java.util.StringJoiner;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@ToString
public class ContactExport {

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("id")
    @Getter
    @Setter
    private String id;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("status")
    @Getter
    @Setter
    private Status status;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("created_at")
    @Getter
    @Setter
    private String createdAt;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("updated_at")
    @Getter
    @Setter
    private String updatedAt;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("completed_at")
    @Getter
    @Setter
    private String completedAt;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("expires_at")
    @Getter
    @Setter
    private String expiresAt;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("urls")
    @Getter
    @Setter
    private List<String> urls;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("message")
    @Getter
    @Setter
    private String message;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("_metadata")
    @Getter
    @Setter
    private Metadata metadata;

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("contact_count")
    @Getter
    @Setter
    private Integer contactCount;

    public ContactExport() {}

    private ContactExport(Builder builder) {
        this.id = builder.id;
        this.status = builder.status;
        this.createdAt = builder.createdAt;
        this.updatedAt = builder.updatedAt;
        this.completedAt = builder.completedAt;
        this.expiresAt = builder.expiresAt;
        this.urls = builder.urls;
        this.message = builder.message;
        this.metadata = builder.metadata;
        this.contactCount = builder.contactCount;
    }

    // Builder class for constructing object
    public static class Builder {

        private String id;
        private Status status;
        private String createdAt;
        private String updatedAt;
        private String completedAt;
        private String expiresAt;
        private List<String> urls;
        private String message;
        private Metadata metadata;
        private Integer contactCount;

        public Builder(
            String id,
            Status status,
            String createdAt,
            String updatedAt,
            String expiresAt
        ) {
            this.id = id;
            this.status = status;
            this.createdAt = createdAt;
            this.updatedAt = updatedAt;
            this.expiresAt = expiresAt;
        }

        public Builder completedAt(String completedAt) {
            this.completedAt = completedAt;
            return this;
        }

        public Builder urls(List<String> urls) {
            this.urls = urls;
            return this;
        }

        public Builder message(String message) {
            this.message = message;
            return this;
        }

        public Builder metadata(Metadata metadata) {
            this.metadata = metadata;
            return this;
        }

        public Builder contactCount(Integer contactCount) {
            this.contactCount = contactCount;
            return this;
        }

        public ContactExport build() {
            return new ContactExport(this);
        }
    }

    @Override
    public String toString() {
        StringJoiner joiner = new StringJoiner(
            ", ",
            ContactExport.class.getSimpleName() + "(",
            ")"
        );
        if (id != null) joiner.add("id=" + id);
        if (status != null) joiner.add("status=" + status);
        if (createdAt != null) joiner.add("createdAt=" + createdAt);
        if (updatedAt != null) joiner.add("updatedAt=" + updatedAt);
        if (completedAt != null) joiner.add("completedAt=" + completedAt);
        if (expiresAt != null) joiner.add("expiresAt=" + expiresAt);
        if (urls != null) joiner.add("urls=" + urls);
        if (message != null) joiner.add("message=" + message);
        if (metadata != null) joiner.add("metadata=" + metadata);
        if (contactCount != null) joiner.add("contactCount=" + contactCount);
        return joiner.toString();
    }
}
